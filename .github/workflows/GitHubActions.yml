# .NET CI.
# Can't contain any projects with COM references.
# Uses a windows OS because at this time, MAUI can run on Linux but it cannot be build on a Linux OS.
#
# For more info see:
# - https://docs.github.com/en/actions/using-workflows/about-workflows
# - https://learn.microsoft.com/en-us/dotnet/core/tools/dotnet-build
# - https://learn.microsoft.com/en-us/dotnet/core/tools/dotnet-pack
# - https://learn.microsoft.com/en-us/nuget/reference/cli-reference/cli-ref-push

############
# Workflow #
############
name: .NET CI

############
# Triggers #
############
on:
  push:
    branches:
      - master # Trigger the workflow on a push to the master branch.
      # - other-branch-here
  pull_request: # Trigger the workflow on any Pull Request.
    branches:
      - '**'

##########
#  Jobs  #
##########
jobs:
  build-debug:
    name: Build [Debug]
    runs-on: windows-latest # Note: ubuntu-latest doesn't work because of MAUI.
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # Setup Java SDK v.11.
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'

      # Setup .NET SDK for .NET 8.
      # .NET 6 and 7 seem already installed on windows-latest image but .NET 8 not (yet).
      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.102'

      # Setup MAUI Tizen.
      - name: maui-tizen install 1/3
        run: dotnet nuget locals all --clear

      - name: maui-tizen install 2/2
        run: dotnet workload install maui --source https://aka.ms/dotnet6/nuget/index.json --source https://api.nuget.org/v3/index.json

      - name: maui-tizen install 3/3
        run: dotnet workload install android ios maccatalyst macos maui --source https://aka.ms/dotnet6/nuget/index.json --source https://api.nuget.org/v3/index.json

      # Restore dependencies.
      - name: Restore dependencies
        run: dotnet restore ./Elephant.NuGets.sln

      # Build in Debug configuration
      - name: Build [Debug]
        run: dotnet build ./Elephant.NuGets.sln --configuration Debug --no-restore --nologo --verbosity normal

  build-release:
    name: Build, Test, Pack, Push [Release]
    runs-on: windows-latest # Note: ubuntu-latest doesn't work because of MAUI.
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Setup Java SDK v.11.
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'

      # Setup .NET SDK for .NET 8.
      # .NET 6 and 7 seem already installed on windows-latest image but .NET 8 not (yet).
      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.102'

      # Setup MAUI Tizen.
      - name: maui-tizen install
        run: dotnet nuget locals all --clear

      - name: maui-tizen install
        run: dotnet workload install maui --source https://aka.ms/dotnet6/nuget/index.json --source https://api.nuget.org/v3/index.json

      - name: maui-tizen install
        run: dotnet workload install android ios maccatalyst macos maui --source https://aka.ms/dotnet6/nuget/index.json --source https://api.nuget.org/v3/index.json

      # Restore dependencies.
      - name: Restore dependencies
        run: dotnet restore ./Elephant.NuGets.sln

      # Build in Release configuration.
      - name: Build [Release]
        run: dotnet build ./Elephant.NuGets.sln --configuration Release --no-restore --nologo --verbosity normal

      # Run tests in Release configuration.
      - name: Test release
        run: dotnet test ./Elephant.NuGets.sln --configuration Release --verbosity normal

      # Restore dependencies.
      - name: Restore dependencies
        run: dotnet restore ./Elephant.NuGets.sln

      # Pack. The dotnet pack command builds the project and creates NuGet packages. The result of this command is a NuGet package (that is, a .nupkg file).
      - name: Pack application
        run: dotnet pack ./Elephant.NuGets.sln --no-build --configuration Release --nologo

      # Requires a GitHub secret called NUGET_ORG.
      - name: Publish
        if: ${{ github.event.pull_request.merged }} # Only run if this is a PR that is being merged.
        run: nuget push **\*.nupkg -Source 'https://api.nuget.org/v3/index.json' -ApiKey ${{secrets.NUGET_ORG}} -SkipDuplicate